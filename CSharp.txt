01_IntroToDotNet
 

Credential Manager

C# - побудована і працює на платформі .NET

.NET Core дозволяє створюватти кросплатформенні додатки

C#  - це чисто ПОО мова програмування

Середовища виконання: Command langauge Run Time (CLR)
CLR - менеджер між нашими класами, бібліотеками і операційною системою. Виділяє і чистить память.



visual studio installer -> modify -> .net deskstop development -> instal

cw + TAB - Console.WriteLine("") - вивести на екран

C# data types  - static
	Value types  -  unNullable 
		Simple types (int, float, char, bool
		enum, 
		struct 
		
	Reference Rypes - dynamic - Nullable 
		Class, array, interface, delegate
		
Типи данних:
	Цілі:
		byte  	 0 > 255
		sbyte	-128>127
		short	int16   -32 768 > 32767 
		ushort  0>65535
		int		- int32
		uint	
		long	-int64
		ulong
	Дробові:
		float (single)   - float h = 3.14f;
		double
		decimal   -  decimal p = 5.64m;
		
Console.Readline()!;

int number = int.Parse(str); 

Console.WriteLine($"Number {numberStr}"); - інтерполяція


Console.OutputEncoding = Encoding.Unicode;
                \'      – single quote, needed for character literals
                \"      – double quote, needed for string literals
                \\      – backslash
                \0      – Unicode character 0
                \a      – Alert (character 7)
                \b      – Backspace (character 8)
                \f      – Form feed (character 12)
                \n      – New line (character 10)
                \r      – Carriage return (character 13)
                \t      – Horizontal tab (character 9)
                \v      – Vertical quote (character 11)
                \uxxxx  – Unicode escape sequence for character with hex value xxxx   
	
cw + TAB - Console.WriteLine("")
Console.Readline()!;

            //изменяет цвет фона
            Console.BackgroundColor = ConsoleColor.Green;
            //изменяет цвет текста                      
            Console.ForegroundColor = ConsoleColor.Magenta;
			Console.ResetColor();

DateTime now = DateTime.Now;

cw + TAB - Console.WriteLine("") - вивести текст
Console.Write($"Number {i + 1}: "); - без переходу на новий рядок
	$"..." — це рядкова інтерполяція: дозволяє вставляти значення змінних або виразів прямо всередину рядка.
	Усередині фігурних дужок {} можна писати змінні або вирази.
string input = Console.ReadLine(); - зчитати текст
numbers[i] = int.Parse(Console.ReadLine())!; - int.Parse — перетворює рядок у ціле число

int[] numbers = new int[5]; - массив

	foreach (int num in numbers)
        {
		sum += num;
        product *= num;
        if (num < min) min = num;
        if (num > max) max = num;
        }





========================================================
02_Array

Array - батьківський клас всіх масивів. Зберігаються в динамічній памяті

Створення нового масиву
Пустий масив:
	int[] arr = new int[8];
Пусті комірки зайняті нулями

int[]arr2 = new int[] {1,2,3,4,5}; - список інізіалізації, саме рахує кількість елементів, можна сайз не вказувати

	int []arr4 = [10,20,30]; - коротший варінт
	
	arr5.SetValue(77,2;
	
	for може редагувати, лізе в кожну комірку по індексу
	
	foreach (var elem in arr5) - може тільки виводити, бо кожне значення копіює в змінну елем, немає доступу до оригіналу, і є готовий інумінатор

Двовимірний масив:
	int[,] array = new int [3,3];
	
	array.Length - загальна кількійсть комірок
	array.GetLength(0) - показує довжину рядка

є тровимірні і так далі

Рваний масив (зубчастий) - двовимірний масив - є рядочкі, але в рідках різна кількість комірок
	int[][] jagged = new int[3][];

	int[] temparr = (int[]) arr.Clone(); - клонування масива

        Random random = new Random();
        double res = random.Next(100) + random.NextDouble();
        Console.WriteLine(res);

		res = Math.Round(res, 2);
        Console.WriteLine(res);


static function?
abstruct ?

	
	
	
	
	




